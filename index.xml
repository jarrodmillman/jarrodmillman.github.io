<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jarrod Millman</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Jarrod Millman</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 14 Dec 2015 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Jarrod Millman</title>
      <link>/</link>
    </image>
    
    <item>
      <title>SciPy India 2015 Talk</title>
      <link>/scipyindia2015talk.html</link>
      <pubDate>Mon, 14 Dec 2015 00:00:00 +0000</pubDate>
      <guid>/scipyindia2015talk.html</guid>
      <description>&lt;p&gt;I gave a talk called &lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/python_for_statisticians.pdf&#34; target=&#34;_blank&#34;&gt;Python for Statisticians&lt;/a&gt; at SciPy India 2015.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SciPy India 2015 Tutorials</title>
      <link>/scipyindia2015tutorials.html</link>
      <pubDate>Mon, 14 Dec 2015 00:00:00 +0000</pubDate>
      <guid>/scipyindia2015tutorials.html</guid>
      <description>&lt;p&gt;Prabhu Ramachandran and I gave the introductory tutorial at SciPy India 2015.  Here
are the slides for
&lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/intro_tutorials/session1.pdf&#34; target=&#34;_blank&#34;&gt;session 1&lt;/a&gt;,
&lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/intro_tutorials/session2.pdf&#34; target=&#34;_blank&#34;&gt;session 2&lt;/a&gt;,
&lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/intro_tutorials/session3.pdf&#34; target=&#34;_blank&#34;&gt;session 3&lt;/a&gt;, and
&lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/intro_tutorials/session4.pdf&#34; target=&#34;_blank&#34;&gt;session 4&lt;/a&gt;.
And here is the &lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/intro_tutorials/data/pendulum.txt&#34; target=&#34;_blank&#34;&gt;pendulum.txt&lt;/a&gt;
and &lt;a href=&#34;http://www.jarrodmillman.com/talks/scipyindia2015/intro_tutorials/data/bird.png&#34; target=&#34;_blank&#34;&gt;bird.png&lt;/a&gt; files
used in the tutorial.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>permute—a Python package for permutation tests and confidence sets</title>
      <link>/ma-thesis.html</link>
      <pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate>
      <guid>/ma-thesis.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.stat.berkeley.edu/~stark&#34; target=&#34;_blank&#34;&gt;Philip B. Stark&lt;/a&gt;, &lt;a href=&#34;http://www.stat.berkeley.edu/~kellieotto&#34; target=&#34;_blank&#34;&gt;Kellie Ottoboni&lt;/a&gt;,
&lt;a href=&#34;http://mentat.za.net&#34; target=&#34;_blank&#34;&gt;Stéfan van der Walt&lt;/a&gt;, and I are developing a permutation
testing library for Python.  The source code is available
&lt;a href=&#34;https://github.com/statlab/permute&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.  More information about the package
is available in my &lt;a href=&#34;http://www.jarrodmillman.com/publications/millman2015thesis.pdf&#34; target=&#34;_blank&#34;&gt;MA
thesis&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Teaching computational thinking and practice</title>
      <link>/siam2015.html</link>
      <pubDate>Mon, 30 Mar 2015 00:00:00 +0000</pubDate>
      <guid>/siam2015.html</guid>
      <description>

&lt;p&gt;A minisymposium held during the &lt;a href=&#34;http://www.siam.org/meetings/cse15&#34; target=&#34;_blank&#34;&gt;SIAM Conference on Computational Science &amp;amp;
Engineering&lt;/a&gt; in Salt Lake City, UT on
Sunday, March 15, 2015.&lt;/p&gt;

&lt;h2 id=&#34;ms78-http-meetings-siam-org-sess-dsp-programsess-cfm-sessioncode-20332&#34;&gt;&lt;a href=&#34;http://meetings.siam.org/sess/dsp_programsess.cfm?SESSIONCODE=20332&#34; target=&#34;_blank&#34;&gt;MS78&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;As dependence on computational tools increases, so does the need for better
computational training.
We discuss our own efforts to provide such training.
We address several larger questions including:
What is the role of computational training in our various fields?
How can we scale training to meet demand?
What technologies, languages, principles, and practices should we teach?
What is the right balance between conceptual learning and hands-on training and practice?
More generally, how should we train the next generation of
scientists, statisticians, and engineers in computational methods and
practices?&lt;/p&gt;

&lt;h3 id=&#34;teaching-statistical-computing-to-undergraduates-slides-talks-siam2015-ms78-cse-mar152015-millman-pdf&#34;&gt;Teaching statistical computing to undergraduates (&lt;a href=&#34;/talks/siam2015/ms78/cse-mar152015-millman.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;
K. Jarrod Millman (co-organizer)
Division of Biostatistics, UC Berkeley

Philip B. Stark (co-organizer)
Department of Statistics, UC Berkeley
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We frame the minisymposium in the context of our
experience teaching computing with data to undergraduates.
We discuss our recent efforts to automate grading student computational
work in Python and R.
Automating grading can improve pedagogy by
making it easier to assign students more work,
reducing latency in providing feedback,
and enabling TAs to spend more time working directly with students
by freeing them from the &amp;ldquo;busy work&amp;rdquo; of grading.&lt;/p&gt;

&lt;h3 id=&#34;teaching-with-version-control-slides-talks-siam2015-ms78-cse-mar152015-leveque-pdf&#34;&gt;Teaching with Version Control (&lt;a href=&#34;/talks/siam2015/ms78/cse-mar152015-leveque.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;
Randall J. LeVeque
Applied Mathematics Department
University of Washington
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The use of version control is widely viewed as a best practice in
the development of software, not only for large scale projects with
many collaborators but also for the solo development of research
codes.  However, students are rarely taught to use version control
in courses.  I will describe some recent attempts to introduce it
into the computational curriculum by requiring students to access
course materials, submit homework, and collaborate on group projects
via GitHub or BitBucket repositories.&lt;/p&gt;

&lt;h3 id=&#34;teaching-computing-to-engineers-slides-http-dx-doi-org-10-6084-m9-figshare-1363841&#34;&gt;Teaching Computing to Engineers (&lt;a href=&#34;http://dx.doi.org/10.6084/m9.figshare.1363841&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)&lt;/h3&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;
Lorena A. Barba
Mechanical &amp; Aerospace Engineering,
The George Washington University
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The term &amp;ldquo;computational thinking&amp;rdquo; became quite popular some years ago with a
viewpoint piece at the CACM by Wang (2006), but the term goes back to Papert 10
years before. Wang explained it as the ability to think algorithmically and
apply problem-solving computation in other fields. We&amp;rsquo;ve been talking about
teaching computational thinking ever since. With an interest in reforming how
we teach computing to engineering students, I stumbled onto an extension of
this idea that defines the pedagogical value of computation. With modern tools
for interactive computing (e.g. IPython Notebooks), it becomes possible to
learn by computing, to actually create knowledge&amp;mdash;similar to what we do in
scientific computing to make discoveries, but in education. I will describe how
this thinking has been inspiring several educational initiatives aiming at
making computing a core pedagogical instrument.&lt;/p&gt;

&lt;h3 id=&#34;community-discussion&#34;&gt;Community discussion&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jarrodmillman/cse2015/wiki&#34; target=&#34;_blank&#34;&gt;Notes from community discussion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Developing open source scientific practice</title>
      <link>/oss-chapter.html</link>
      <pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate>
      <guid>/oss-chapter.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://fperez.org/&#34; target=&#34;_blank&#34;&gt;Fernando Pérez&lt;/a&gt; and my chapter titled &lt;a href=&#34;http://www.jarrodmillman.com/publications/millman2014developing.pdf&#34; target=&#34;_blank&#34;&gt;&amp;ldquo;Developing open
source scientific practice&amp;rdquo;&lt;/a&gt;
was just published in &amp;ldquo;Implementing Reproducible Research (Chapman &amp;amp; Hall/CRC The R Series)&amp;rdquo;
edited by Victoria Stodden, Friedrich Leisch, and Roger D. Peng.  You can find a
&lt;a href=&#34;https://osf.io/h9gsd/&#34; target=&#34;_blank&#34;&gt;preprint&lt;/a&gt; on the &lt;a href=&#34;https://osf.io&#34; target=&#34;_blank&#34;&gt;Open Science Framework (OSF)&lt;/a&gt;
website along with the other chapters.  The &lt;a href=&#34;https://github.com/fperez/repro-chapter-oss&#34; target=&#34;_blank&#34;&gt;source&lt;/a&gt;
for the chapter will be updated on GitHub.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reproducibility and computationally intensive, data-driven research</title>
      <link>/siam2013.html</link>
      <pubDate>Thu, 28 Feb 2013 00:00:00 +0000</pubDate>
      <guid>/siam2013.html</guid>
      <description>

&lt;p&gt;A mini-symposium at the &lt;a href=&#34;http://www.siam.org/meetings/cse13&#34; target=&#34;_blank&#34;&gt;SIAM Conference on Computational Science &amp;amp;
Engineering&lt;/a&gt; in Boston, MA on
February 28, 2013.&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Since Jon Claerbout adopted and started promoting reproducible research
practices much has changed. While the problems for reproducibility of
computational results have grown in conjunction with increases in
computing power and storage densities, there has also been a steady
growth in awareness of these problems and strategies to address them. In
this minisymposium, we will discuss several recent attempts to come to
terms with reproducibility in computational research. Topics will
include education, publication, forensics and scientific integrity, as
well as new technologies for provenance tracking and literate
programming.&lt;/p&gt;

&lt;h2 id=&#34;ms205-part-i-of-ii&#34;&gt;MS205 - Part I of II&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;
(&lt;a href=&#34;http://www.jarrodmillman.com/talks/siam2013/ms205/cse-feb282013-millman.pdf&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)
and &lt;strong&gt;ICERM report&lt;/strong&gt; (&lt;a href=&#34;http://www.jarrodmillman.com/talks/siam2013/ms205/cse-feb282013-carey.pdf&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jarrodmillman.com&#34; target=&#34;_blank&#34;&gt;K. Jarrod Millman&lt;/a&gt;, University of
California, Berkeley, USA&lt;/li&gt;
&lt;li&gt;Vincent J. Carey Harvard University, USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Reproducible Research on the Web: From Homework, Blogging to Open
Journals&lt;/strong&gt;
(&lt;a href=&#34;http://www.jarrodmillman.com/talks/siam2013/ms205/cse-feb282013-yihui-xie.html&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Yihui Xie, Iowa State University, USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reproducible research used to be tied to $\LaTeX{}$ (e.g. Sweave in R)
for statisticians, which has a steep learning curve and lacks many
features of the web. The underlying idea of literate programming,
however, is language agnostic. In this talk, we introduce the R package
&lt;strong&gt;knitr&lt;/strong&gt; as a general-purpose tool for reproducible research, with
an emphasis on dynamic report generation on the web with Markdown,
including reproducible homework, blog posts and online journals in
statistics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rethinking How we Work with Documents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Duncan W. Temple Lang, University of California, Davis, USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reproducible research tools require capturing all of the different avenues and
lines of exploration in research. The document should be a database that can be
rendered in different ways for different audiences, allowing dynamic results
replacing code, enabling reader interactivity to explore different approaches
and what-ifs. We also want to be able to programmatically query, update and
verify this document database. All of this leads us to a different structure
and approach for authoring documents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reproducible Research in Graduate Education in the Computational
Sciences&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sorin Mitran, University of North Carolina at Chapel Hill, USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Instilling good habits of reproducible computational research can be
woven throughout graduate student education. Current software tools
allow drafting of live documents that contain theoretical derivations,
generation of computational code, verifiable execution of code, and
preparation of reports. The talk presents experience in this approach in
graduate courses at UNC.&lt;/p&gt;

&lt;h2 id=&#34;ms224-part-ii-of-ii&#34;&gt;MS224 - Part II of II&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Publishing Reproducible Research: Thoughts on Journal Policy&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Roger Peng, Johns Hopkins Bloomberg School of Public Health&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will also discuss the role that journals can play in encouraging
reproducible research and will review the recent reproducibility policy
at the journal Biostatistics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disseminating Reproducible Computational Research: Tools, Innovations,
and Best Practices&lt;/strong&gt;
(&lt;a href=&#34;http://www.jarrodmillman.com/talks/siam2013/ms224/cse-feb282013-stodden.pdf&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.stanford.edu/~vcs/&#34; target=&#34;_blank&#34;&gt;Victoria Stodden&lt;/a&gt;, Columbia
University, USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Computation is now widely recognized as central to the scientific
enterprise, and numerous efforts are emerging to incorporate code and
data sharing into standards of research dissemination. This goal is
challenging from a number of perspectives, including effective research
practices. In this talk I discuss novel innovations and best practices
for facilitating code and data sharing, both at the time of publication
and during the research itself, that support the underlying rational of
reproducible research.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Portrait of One Scientist as a Graduate Student&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Paul Ivanov, Redwood Center for Theoretical Neuroscience, University of California, Berkeley
(&lt;a href=&#34;http://www.jarrodmillman.com/talks/siam2013/ms224/cse-feb282013-ivanov.html&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this talk, I will focus on the &lt;em&gt;how&lt;/em&gt; of reproducible research. I will
focus on specific tools and techniques I have found invaluable in doing
research in a reproducible manner. In particular, I will cover the following
general topics (with specific examples in parentheses): version controland code
provenance (git), code verification (test driven development, nosetests), data
integrity (sha1, md5, git-annex), seed saving ( random seed retention )
distribution of datasets (mirroring, git-annex, metalinks), light-weight
analysis capture ( ttyrec, ipython notebook)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reproducible Research and Omics: Thoughts from the IOM Review&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Keith A. Baggerly, Department of Bioinformatics and Computational Biology, UT MD Anderson Cancer Center
(&lt;a href=&#34;http://www.jarrodmillman.com/talks/siam2013/ms224/cse-feb282013-baggerly.pdf&#34; target=&#34;_blank&#34;&gt;slides&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Between 2007 and 2010, several genomic &amp;ldquo;signatures&amp;rdquo; were used to guide patient
therapy in clinical trials in cancer. Unfortunately, the signatures were wrong,
and trials proceeded despite warnings to this effect. The Institute of Medicine
(IOM) subsequently reviewed the level of evidence that should be required in
such situations. Many recommendations focus on reproducibility and data
integrity, including directives to funders, journals, and regulatory agencies.
We briefly review the report and implications for reproducible research.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Verifiable, reproducible research and computational science</title>
      <link>/siam2011.html</link>
      <pubDate>Fri, 04 Mar 2011 00:00:00 +0000</pubDate>
      <guid>/siam2011.html</guid>
      <description>

&lt;p&gt;A mini-symposium at the &lt;a href=&#34;http://www.siam.org/meetings/cse11&#34; target=&#34;_blank&#34;&gt;SIAM Conference on Computational Science &amp;amp;
Engineering&lt;/a&gt; in Reno, NV on March 4,
2011.&lt;/p&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;As research grows increasingly dependent on computing, it becomes
critical for our computational resources to be developed with the same
rigor, open review and access as the results they support. In this
minisymposium, we will discuss:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sharing of scientific software, data and knowledge necessary for
reproducible research&lt;/li&gt;
&lt;li&gt;unrestricted access to research outcomes and educational tools&lt;/li&gt;
&lt;li&gt;open source software developed by collaborative, meritocratic
communities&lt;/li&gt;
&lt;li&gt;openly tested, validated and documented software as the basis for
reliable scientific outcomes&lt;/li&gt;
&lt;li&gt;high standards of computational literacy in the education of
mathematicians, scientists and engineers&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ms148-part-i-of-ii&#34;&gt;MS148 - Part I of II&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The Challenge of Reproducible Research in the Computer Age&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms148/millman.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://jarrodmillman.com&#34; target=&#34;_blank&#34;&gt;K. Jarrod Millman&lt;/a&gt;, University of
California, Berkeley, USA&lt;/p&gt;

&lt;p&gt;Computing is increasingly central to the practice of mathematical and
scientific research. This has provided many new opportunities as well as
new challenges. In particular, modern scientific computing has strained
the ability of researchers to reproduce their own (as well as their
colleagues&amp;rsquo;) work. In this talk, I will outline some of the obstacles to
reproducible research as well as some potential solutions and
opportunities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reproducible Research, Lessons from the Madagascar Project&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms148/fomel.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sepwww.stanford.edu/oldsep/sergey/&#34; target=&#34;_blank&#34;&gt;Sergey Fomel&lt;/a&gt;, University of
Texas at Austin, USA&lt;/p&gt;

&lt;p&gt;The Madagascar open-source project is a community effort, which
implements reproducible research practices, as envisioned by Jon
Claerbout. More than 100 geophysical papers have been published,
together with open software code and data, and are maintained by the
community. We have learned that continuous maintenance and repeated
testing are necessary for enabling long-term reproducibility. As noted
by Claerbout and others, the main beneficiary of the reproducible
research discipline is the author.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top 10 Reasons to NOT Share your Code and Why you Should Anyway&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms148/leveque.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amath.washington.edu/~rjl/&#34; target=&#34;_blank&#34;&gt;Randall J. LeVeque&lt;/a&gt;, University
of Washington, USA&lt;/p&gt;

&lt;p&gt;The research codes used to produce results (tables, plots, etc.) in
publications are rarely made available, limiting the readers&amp;rsquo; ability to
understand the algorithms that are actually implemented. Many objections
are typically raised to doing so. Although there are some valid
concerns, my view is that there are good counter-arguments or ways to
address most of these issues. In this talk I will discuss what may be
the top 10 reasons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intellectual Contributions to Digitized Science: Implementing the
Scientific Method&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms148/stodden.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.stanford.edu/~vcs/&#34; target=&#34;_blank&#34;&gt;Victoria Stodden&lt;/a&gt;, Columbia University,
USA&lt;/p&gt;

&lt;p&gt;Our stock of scientific knowledge is now accumulating in digital form,
and the underlying reasoning is often in the code that generated the
findings, which is often never published. The case for open data is
being made but open code must be recognized as equally important in a
principled approach, that of reproducibility of computational results.
Issues involved with code and data disclosure are presented, along with
possible solutions.&lt;/p&gt;

&lt;h1 id=&#34;ms155-part-ii-of-ii&#34;&gt;MS155 - Part II of II&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Reproducible Research: Lessons from the Open Source World&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms155/perez.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://fperez.org/&#34; target=&#34;_blank&#34;&gt;Fernando Pérez&lt;/a&gt;, University of California,
Berkeley, USA&lt;/p&gt;

&lt;p&gt;Why are the practices of open source software development often more
consistent with our ideas of openness and reproducibility in science
than science itself? Today&amp;rsquo;s scientific praxis falls short of our ideals
of reproducibility, and these problems are particularly acute in
computational domains where they should be less prevalent. I will
explore the reasons for this and will draw some ideas from software
development that provide technical means to address some of these
issues.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FEMhub, a Free Distribution of Open Source Finite Element Codes&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms155/solin.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hpfem.org/~pavel/&#34; target=&#34;_blank&#34;&gt;Pavel Solin&lt;/a&gt;, Ondrej Certik, Aayush Poudel,
and Sameer Regmi, University of Nevada, Reno, USA; Mateusz Paprock,
Technical University of Wroclaw, Poland&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://femhub.org&#34; target=&#34;_blank&#34;&gt;FEMhub&lt;/a&gt; is an open source distribution of finite
element codes with a unified Python interface. The goal of the project
is to reduce heterogeneity in installation and usage of open source
finite element codes, facilitate their interoperability and comparisons,
and improve reproducibility of results. FEMhub is available for download
as desktop application, but all codes are also automatically available
in the &lt;a href=&#34;http://lab.femhub.org&#34; target=&#34;_blank&#34;&gt;Online Numerical Methods Laboratory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reproducible Models and Reliable Simulations: Current Trends in
Computational Neuroscience&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms155/plesser.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://arken.umb.no/~plesser/&#34; target=&#34;_blank&#34;&gt;Hans E. Plesser&lt;/a&gt;, Norwegian University
of Life Sciences, Norway; Sharon M. Crook, Arizona State University,
USA; Andrew P. Davison, CNRS, France&lt;/p&gt;

&lt;p&gt;Computational neuroscientists simulate models of neuronal networks to
further our understanding of brain dynamics. Unfortunately, the validity
of models of neuronal dynamics and of the simulation software
implementing the models is difficult to ascertain, challenging the
validity of computational neuroscience. I will describe how the
computational neuroscience community is addressing validity through
software reviews, best practices, increasing use of established software
packages, meta-simulators, systematic testing, and simulator-independent
model-specification languages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publishing Reproducible Results with VisTrails&lt;/strong&gt;
(&lt;a href=&#34;/talks/siam2011/ms155/silva.pdf&#34;&gt;slides&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Juliana Freire and &lt;a href=&#34;http://www.cs.utah.edu/~csilva/&#34; target=&#34;_blank&#34;&gt;Claudio Silva&lt;/a&gt;,
University of Utah, USA&lt;/p&gt;

&lt;p&gt;VisTrails is an open-source provenance management and scientific
workflow system designed to support scientific discovery. It combines
and substantially extends useful features of visualization and
scientific workflow systems. Similar to visualization systems, VisTrails
makes advanced scientific visualization techniques available to users
allowing them to explore and compare different visual representations of
their data; and similar to scientific workflow systems, VisTrails
enables the composition of workflows that combine specialized libraries,
distributed computing infrastructure, and Web services.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python for Scientists and Engineers</title>
      <link>/cise2011.html</link>
      <pubDate>Tue, 01 Mar 2011 00:00:00 +0000</pubDate>
      <guid>/cise2011.html</guid>
      <description>&lt;p&gt;Michael Aivazis and I guest edited the March/April 2011 special issue of
&lt;a href=&#34;http://www.computer.org/portal/web/cise/home&#34; target=&#34;_blank&#34;&gt;Computing in Science and
Engineering&lt;/a&gt; on &lt;a href=&#34;http://dx.doi.org/10.1109/MCSE.2011.36&#34; target=&#34;_blank&#34;&gt;Python for
Scientists and Engineers&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Open Research Computing in Python</title>
      <link>/orcp2010.html</link>
      <pubDate>Fri, 25 Jun 2010 00:00:00 +0000</pubDate>
      <guid>/orcp2010.html</guid>
      <description>

&lt;p&gt;A one-day workshop on held at the &lt;a href=&#34;http://www.msri.org&#34; target=&#34;_blank&#34;&gt;Mathematical Sciences Research
Institute (MSRI)&lt;/a&gt; in on June 25, 2010 in Berkeley,
CA.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;09:00-09:10 Welcome Jarrod Millman and William Stein&lt;/li&gt;
&lt;li&gt;09:10-10:10 What to demand from a Scientific Computing Language &amp;ndash;
Even if you don&amp;rsquo;t care about computing or languages - Peter Norvig (Google)&lt;/li&gt;
&lt;li&gt;10:10-11:00 Cython: the best of both worlds - Robert Bradshaw (Google)&lt;/li&gt;
&lt;li&gt;11:00-11:50 Python: an ecosystem for scientific computing - Fernando Perez (UC Berkeley)&lt;/li&gt;
&lt;li&gt;12:00-14:00 LUNCH&lt;/li&gt;
&lt;li&gt;14:00-14:50 Python in science and engineering education in India - Prabhu Ramachandran (IIT Bombay)&lt;/li&gt;
&lt;li&gt;14:50-15:40 Sage: creating a viable open source alternative to Magma, Maple, Mathematica, and Matlab - William Stein (University of Washington)&lt;/li&gt;
&lt;li&gt;15:40-16:10 BREAK&lt;/li&gt;
&lt;li&gt;16:10-17:00  The foundation for mathematical and scientific computing - Jarrod Millman (UC Berkeley)&lt;/li&gt;
&lt;li&gt;17:00-18:00 DISCUSSION&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The workshop will be held in Simon&amp;rsquo;s auditorium at MSRI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Simon&#39;s auditorium
Mathematical Science Research Institute
17 Gauss Way
Berkeley, CA 94720
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;abstracts&#34;&gt;Abstracts&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Cython: the best of both worlds&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Robert Bradshaw&lt;/p&gt;

&lt;p&gt;Cython is an extension to the Python language that allows explicit type
declarations and is compiled directly to C. This addresses Python&amp;rsquo;s
large overhead for numerical loops and the difficulty of efficiently
making use of existing C and Fortran code, which Cython code can
interact with natively. The Cython language combines the speed of C with
the power and simplicity of the Python language.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python: an ecosystem for scientific computing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fernando Perez&lt;/p&gt;

&lt;p&gt;As the relationship between research and computing evolves, new tools
are required that can not only treat numerical problems, but also allow
us to solve a variety of problems involving large datasets in many
formats, new algorithms and computational systems like databases or
internet servers.&lt;/p&gt;

&lt;p&gt;I will discuss how Python provides a balance of clarity and flexibility,
without sacrificing avenues for performance, to develop better
computational research tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Python in science and engineering education in India&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prabhu Ramachandran&lt;/p&gt;

&lt;p&gt;The National Mission on Education through ICT (NMEICT) is a one billion
dollar initiative launched by the Ministry of Human Resources
Development (MHRD), Government of India. It&amp;rsquo;s goal is to improve the
quality of tertiary education in India. One component of the mission
involves the spread of open source tools in collegiate education.&lt;/p&gt;

&lt;p&gt;In May 2009, IIT Bombay proposed a project on Free Open source Software
for Science and Engineering Education (FOSSEE) as part of this mission.
The project is to run for three years. One of the thrust areas of FOSSEE
is the propagation of the use of Python in science and engineering
curricula. To this end, we have been conducting numerous workshops on
Python for scientific computing, generating documentation, hosting
conferences etc. The workshops are targeted at faculties of colleges,
research scholars and students. In this talk, we discuss what we have
achieved until now and highlight our future plans for the project. We
also attempt to highlight what this will do for the Python community at
large.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sage: creating a viable open source alternative to Magma, Maple,
Mathematica, and Matlab&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;William Stein&lt;/p&gt;

&lt;p&gt;Sage is an open source mathematical software project that I started in
2005, which has had over 200 contributors, about 50 active developers,
and receives funding from NSF, Google, Microsoft, and other
organizations. The goal of the Sage project is to create a viable free
open source alternative to Magma, Maple, Mathematica and MATLAB. I will
describe why I started the Sage project, then give a status report about
what Sage currently is. This paper is closely related to my
&lt;a href=&#34;http://wstein.org/papers/icms/icms_2010.pdf&#34; target=&#34;_blank&#34;&gt;talk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The foundation for mathematical and scientific computing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jarrod Millman&lt;/p&gt;

&lt;p&gt;William Stein, Fernando Perez, and I are founding a non-profit
foundation for mathematical and scientific research computing. Our
purpose is to ensure unrestricted access to the best computational tools
for research and education in mathematics, science, and engineering. Our
aim is to do this primarily by fostering existing efforts and
communities. The foundation will initially focus on Python, rather than
other languages for scientific computing such as R or Scilab. Despite
this initial focus on Python, the foundation&amp;rsquo;s mission will not be
merely to promote the use of Python in science.&lt;/p&gt;

&lt;p&gt;As research grows increasingly dependent on computing, it becomes
critical for our computational resources to be developed with the same
rigor, open review and access as the results they support. For this
reason, we will actively promote:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sharing of scientific software, data and knowledge necessary for
reproducible research&lt;/li&gt;
&lt;li&gt;unrestricted access to research outcomes and educational tools&lt;/li&gt;
&lt;li&gt;open source software developed by collaborative, meritocratic
communities&lt;/li&gt;
&lt;li&gt;academic recognition of computational developments on equal footing
to the publication of results&lt;/li&gt;
&lt;li&gt;openly tested, validated and documented software as the basis for
reliable scientific outcomes&lt;/li&gt;
&lt;li&gt;high standards of computational literacy in the education of
mathematicians, scientists and engineers&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
